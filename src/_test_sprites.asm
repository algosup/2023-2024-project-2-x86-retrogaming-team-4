; org 100h
 
; %define SPRITE_SIZE 16
; %define SCREEN_WIDTH 320
section .bss
buffScreen resb SPRITE_SIZE*SPRITE_SIZE ; where is stored the backuped screen
section .data
xPos dw 0 
xVelocity dw 1
base: equ 0xf9fe
old_time: equ base+0x06
; draw the radioactive ghost
; blinky  db 0xFF, 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF, 0xFF
;         db 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF
;         db 0x0A, 0x0A, 0x0f, 0x00, 0x0A, 0x0f, 0x00, 0x0A
;         db 0x0A, 0x0A, 0x0f, 0x0f, 0x0A, 0x0f, 0x0f, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0xFF, 0x0A, 0x0A, 0xFF, 0x0A, 0x0A, 0x0A
        
;         db 0xFF, 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF, 0xFF
;         db 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF
;         db 0x0A, 0x0A, 0x0f, 0x00, 0x0A, 0x0f, 0x00, 0x0A
;         db 0x0A, 0x0A, 0x0f, 0x0f, 0x0A, 0x0f, 0x0f, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0xFF, 0x0A, 0x0A, 0xFF, 0x0A, 0x0A, 0x0A
        
;         db 0xFF, 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF, 0xFF
;         db 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF
;         db 0x0A, 0x0A, 0x0f, 0x00, 0x0A, 0x0f, 0x00, 0x0A
;         db 0x0A, 0x0A, 0x0f, 0x0f, 0x0A, 0x0f, 0x0f, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0xFF, 0x0A, 0x0A, 0xFF, 0x0A, 0x0A, 0x0A
;         db 0xFF, 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF, 0xFF
;         db 0xFF, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0xFF
;         db 0x0A, 0x0A, 0x0f, 0x00, 0x0A, 0x0f, 0x00, 0x0A
;         db 0x0A, 0x0A, 0x0f, 0x0f, 0x0A, 0x0f, 0x0f, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A
;         db 0x0A, 0xFF, 0x0A, 0x0A, 0xFF, 0x0A, 0x0A, 0x0A
 
section .text

;------------------------------------------------------------------
;THE GAME LOOP
;-------------

; backup the screen before display ghost
    
;------------------------------------------------------------------
;THE FUNCTIONS
;-------------
;!!!PARAMETERS!!!;
;to select the color to use to fill, you need this color into 'al'

;!!!PARAMETERS!!!;
;to select the ghost to print, you need to put the sprite address in 'si' (using 'lea si, blinky')

; waiting:
;     mov cx, 0xFFFF ; how many times we repeat the loop
;     waitloop:
;     loop waitloop ; we jump FFFF times, so , many times, to make a delay in the program
; ret ; go back in the game loop
